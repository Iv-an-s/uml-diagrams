@startuml

start
partition "**Регистрация/авторизация клиента**"{
: Клиент регистрируется на сайте или входит в существующий аккаунт;
: Система подтверждает учетные данные клиента;
}
partition "**Оформление заказа**"{
repeat
: Клиент выбирает товары и добавляет их в корзину;
: Клиент переходит к оформлению заказа, выбирает способ доставки и оплаты;
partition "Проверка наличия товара на складе"{
: Система проверяет наличие каждого товара в выбранных количествах;
}
backward: Уведомляем о недоступности товара. \nПредлагаем замену на альтернативный товар\nили удаление отсутствующего товара из заказа;

repeat while(Товар отсутствует?) is (Да)
: Уведомляем о возможности оформить заказ\n(Кнопка оформления заказа активна);
-> Процесс продолжается;
}
: Клиент жмет кнопку "Оформить заказ";

partition "**Промоакции и скидки**"{
if (Есть ли промокод?) then (Да)
    repeat: Ввод промокода;
        :Проверка промокода;
        backward: Предлагаем ввести промокод еще раз\nИли отказаться от применения промокода;
    repeat while (Промокод верный?) is (Нет) not (Да)
    #palegreen: Сообщение об успешном применении промокода;
else (Нет)
:Применяем стандартные скидки;
endif
: Обновляем цену заказа;
}
fork
partition "**Оплата заказа**"{
repeat: Клиент выбирает "перейти к оплате";
    :Клиент выбирает способ оплаты\n(кредитная карта, PayPal, банковский перевод и т.д.);
    if (Есть подходящий вариант?) then (нет)
    :Заказ отменяется;
    :Клиенту возвращаются средства (если были списаны);
    stop
    else (Да)
    endif
    :Система проверяет платежные детали и производит транзакцию;
    backward: отправляем уведомление клиенту о проблеме с платежем \nс указанием причины\nПредлагаем повторить попытку или изменить способ оплаты.\nСообщаем о возможности связаться со службой поддержки\nдля уточнения деталей;
    repeat while ("Оплата прошла?") is (нет) not (да)


}
fork again
partition "**Подготовка товара к отправке**"{
    :Система уведомляет склад о необходимости собрать заказ;
    :Сотрудники склада комплектуют заказ по списку;
}
end fork
partition "**Синхронизация параллельных процессов**\n**если оплата успешна и товар подготовлен к отправке**"
    :Генерируется счет-фактура;
    :Отправляется уведомление клиенту \nо подтверждении заказа и статусе доставки;
    :Заказ переходит в статус "Отправлен";
partition "**Отслеживание и доставка заказа**"{
: Система обновляет статус заказа по мере его продвижения к доставке;
: Клиенту направляются уведомления о каждом изменении статуса\n(подтверждение, отправка, доставка);
}

stop
@enduml